generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model bahan_baku {
  id              Int               @id @default(autoincrement())
  nama            String
  jumlah          Int
  satuan          String?
  status          Boolean           @default(true)
  createdAt       DateTime          @default(now())
  mengelola_bahan mengelola_bahan[]
}

model item_pesanan {
  id         Int     @id @default(autoincrement())
  id_menu    Int
  id_pesanan Int
  jumlah     Int
  menu       menu    @relation(fields: [id_menu], references: [id], map: "Item_Pesanan_id_menu_fkey")
  pesanan    pesanan @relation(fields: [id_pesanan], references: [id], map: "Item_Pesanan_id_pesanan_fkey")

  @@index([id_menu], map: "Item_Pesanan_id_menu_fkey")
  @@index([id_pesanan], map: "Item_Pesanan_id_pesanan_fkey")
}

model mengelola_bahan {
  id         Int                    @id @default(autoincrement())
  id_stock   Int
  id_user    Int
  proses     mengelola_bahan_proses @default(Tambah)
  jumlah     Int
  createdAt  DateTime               @default(now())
  bahan_baku bahan_baku             @relation(fields: [id_stock], references: [id], map: "Mengelola_Bahan_id_stock_fkey")
  users      users                  @relation(fields: [id_user], references: [id], map: "Mengelola_Bahan_id_user_fkey")

  @@index([id_stock], map: "Mengelola_Bahan_id_stock_fkey")
  @@index([id_user], map: "Mengelola_Bahan_id_user_fkey")
}

model menu {
  id           Int            @id @default(autoincrement())
  nama         String
  harga        Float
  tersedia     Boolean        @default(false)
  foto         String?
  kategori     menu_kategori  @default(Makanan)
  createdAt    DateTime       @default(now())
  status       Boolean        @default(true)
  item_pesanan item_pesanan[]
}

model pesanan {
  id           Int            @id @default(autoincrement())
  id_user      Int
  no_meja      Int
  total_harga  Float?
  status       pesanan_status
  banyak_orang Int
  atas_nama    String
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @default(now())
  item_pesanan item_pesanan[]
  users        users          @relation(fields: [id_user], references: [id], map: "Pesanan_id_user_fkey")

  @@index([id_user], map: "Pesanan_id_user_fkey")
}

model users {
  id              Int               @id @default(autoincrement())
  nama            String
  password        String
  umur            Int?
  role            String
  no_telp         String?
  email           String            @unique(map: "Users_email_key")
  username        String            @unique(map: "Users_username_key")
  createdAt       DateTime          @default(now())
  status          Boolean           @default(true)
  mengelola_bahan mengelola_bahan[]
  pesanan         pesanan[]
}

enum mengelola_bahan_proses {
  Tambah
  Edit
  Hapus
}

enum pesanan_status {
  selesai
  proses
  dibatalkan
}

enum menu_kategori {
  Makanan
  Minuman
  Cemilan
  Lain_lain
}
